{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App.jsx\";\n// import { useState, useEffect } from 'react';\nimport { Container } from './App.styled'; // import { nanoid } from 'nanoid';\n\nimport { Section } from './Section/Section';\nimport { ContactList } from './ContactList/ContactList';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  //   const [contacts, setContacts] = useState(() => JSON.parse(localStorage.getItem('contacts')) ?? []);\n  //   const [filter, setFilter] = useState('');\n  //   useEffect(() => {\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\n  //   }, [contacts]);\n  //   const onFormSubmit = data => {\n  //     const newContact = {\n  //       id: nanoid(),\n  //       name: data.name,\n  //       number: data.number,\n  //     };\n  //     if (contacts.find(contact => contact.name === newContact.name)) {\n  //       alert(`${newContact.name} is already in contacts`);\n  //       return;\n  //     }\n  //     setContacts(prevState => ([...prevState, newContact]));\n  //   };\n  //   const changeFilter = event => {\n  //     setFilter( event.currentTarget.value);\n  //   }\n  // const normalizedFilter = filter.toLowerCase();\n  // const contactsAfterFilter = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  //   const deleteContact = id => {\n  //     setContacts(prevState => prevState.filter(contact => contact.id !== id))\n  // }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["Container","Section","ContactList","ContactForm","Filter","App"],"mappings":";AAAA;AACA,SAASA,SAAT,QAA0B,cAA1B,C,CACA;;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1CM;KAAMA,G","sourcesContent":["// import { useState, useEffect } from 'react';\r\nimport { Container } from './App.styled';\r\n// import { nanoid } from 'nanoid';\r\n\r\nimport { Section } from './Section/Section';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { Filter } from './Filter/Filter';\r\n\r\nexport const App = () => {\r\n  //   const [contacts, setContacts] = useState(() => JSON.parse(localStorage.getItem('contacts')) ?? []);\r\n  //   const [filter, setFilter] = useState('');\r\n\r\n  //   useEffect(() => {\r\n  //     localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  //   }, [contacts]);\r\n\r\n  //   const onFormSubmit = data => {\r\n  //     const newContact = {\r\n  //       id: nanoid(),\r\n  //       name: data.name,\r\n  //       number: data.number,\r\n  //     };\r\n\r\n  //     if (contacts.find(contact => contact.name === newContact.name)) {\r\n  //       alert(`${newContact.name} is already in contacts`);\r\n  //       return;\r\n  //     }\r\n  //     setContacts(prevState => ([...prevState, newContact]));\r\n  //   };\r\n\r\n  //   const changeFilter = event => {\r\n  //     setFilter( event.currentTarget.value);\r\n  //   }\r\n\r\n  // const normalizedFilter = filter.toLowerCase();\r\n  // const contactsAfterFilter = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n\r\n  //   const deleteContact = id => {\r\n  //     setContacts(prevState => prevState.filter(contact => contact.id !== id))\r\n  // }\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <Section title=\"Contacts\" />\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}