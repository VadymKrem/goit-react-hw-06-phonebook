{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getContactsFilter, getContactsList } from 'Redux/selectors';\nimport { useMemo } from 'react'; // import { createSelector } from '@reduxjs/toolkit';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = () => {\n  _s();\n\n  const contacts = useSelector(getContactsList);\n  console.log(contacts);\n  const filter = useSelector(getContactsFilter);\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter, 0);\n    });\n  }, [filterValue, contacts]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: filteredContacts.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        id: id,\n        name: name,\n        number: number\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactList, \"8Uj2X7Qo7q5UQw7GoO1v5WeXx/c=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["ContactListItem","List","useSelector","getContactsFilter","getContactsList","useMemo","ContactList","contacts","console","log","filter","filteredContacts","normalizedFilter","filterValue","toLowerCase","contact","name","includes","map","id","number"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,mCAAhC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,iBAAnD;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,CAACE,eAAD,CAA5B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,MAAM,GAAGR,WAAW,CAACC,iBAAD,CAA1B;AACA,QAAMQ,gBAAgB,GAAGN,OAAO,CAAC,MAAM;AACrC,UAAMO,gBAAgB,GAAGC,WAAW,CAACC,WAAZ,EAAzB;AACA,WAAOP,QAAQ,CAACG,MAAT,CAAgBK,OAAO,IAAI;AAChC,aAAOA,OAAO,CAACC,IAAR,CAAaF,WAAb,GAA2BG,QAA3B,CAAoCL,gBAApC,EAAsD,CAAtD,CAAP;AACD,KAFM,CAAP;AAGD,GAL+B,EAK7B,CAACC,WAAD,EAAcN,QAAd,CAL6B,CAAhC;AAMA,sBACE,QAAC,IAAD;AAAA,cACGI,gBAAgB,CAACO,GAAjB,CAAqB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMH,QAAAA,IAAN;AAAYI,QAAAA;AAAZ,OAAD;AAAA,0BACpB,QAAC,eAAD;AAA0B,QAAA,EAAE,EAAED,EAA9B;AAAkC,QAAA,IAAI,EAAEH,IAAxC;AAA8C,QAAA,MAAM,EAAEI;AAAtD,SAAsBD,EAAtB;AAAA;AAAA;AAAA;AAAA,cADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBM;;GAAMb,W;UACMJ,W,EAEFA,W;;;KAHJI,W","sourcesContent":["import { ContactListItem } from './ContactListItem/ContactListItem';\r\nimport { List } from './ContactList.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getContactsFilter, getContactsList } from 'Redux/selectors';\r\nimport { useMemo } from 'react';\r\n// import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const ContactList = () => {\r\n  const contacts = useSelector(getContactsList);\r\n  console.log(contacts);\r\n  const filter = useSelector(getContactsFilter);\r\n  const filteredContacts = useMemo(() => {\r\n    const normalizedFilter = filterValue.toLowerCase();\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(normalizedFilter, 0);\r\n    });\r\n  }, [filterValue, contacts]);\r\n  return (\r\n    <List>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} id={id} name={name} number={number} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}