{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './phonebookSlice';\nimport { filtersReducer } from './filterSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filtersReducer\n});\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n}; // const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistReducer(persistConfig, rootReducer),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/Redux/store.js"],"names":["combineReducers","configureStore","contactsReducer","filtersReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","contacts","filter","persistConfig","key","blacklist","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,WAAW,GAAGb,eAAe,CAAC;AAClCc,EAAAA,QAAQ,EAAEZ,eADwB;AAElCa,EAAAA,MAAM,EAAEZ;AAF0B,CAAD,CAAnC;AAKA,MAAMa,aAAa,GAAG;AAAEC,EAAAA,GAAG,EAAE,UAAP;AAAmBL,EAAAA,OAAnB;AAA4BM,EAAAA,SAAS,EAAE,CAAC,QAAD;AAAvC,CAAtB,C,CAEA;;AAEA,OAAO,MAAMC,KAAK,GAAGlB,cAAc,CAAC;AAClCmB,EAAAA,OAAO,EAAEf,cAAc,CAACW,aAAD,EAAgBH,WAAhB,CADW;AAGlCQ,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAJY,CAAD,CAA5B;AAUP,OAAO,MAAMc,SAAS,GAAGrB,YAAY,CAACe,KAAD,CAA9B","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './phonebookSlice';\r\nimport { filtersReducer } from './filterSlice';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filtersReducer,\r\n});\r\n\r\nconst persistConfig = { key: 'contacts', storage, blacklist: ['filter'] };\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducer),\r\n\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}