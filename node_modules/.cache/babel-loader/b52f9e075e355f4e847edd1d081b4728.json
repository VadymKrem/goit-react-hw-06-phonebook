{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Container } from './App.styled';\nimport { nanoid } from 'nanoid';\nimport { Section } from './Section/Section';\nimport { ContactList } from './ContactList/ContactList';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(() => {\n    var _JSON$parse;\n\n    return (_JSON$parse = JSON.parse(localStorage.getItem('contacts'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n  });\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onFormSubmit = data => {\n    const newContact = {\n      id: nanoid(),\n      name: data.name,\n      number: data.number\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const contactsAfterFilter = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      formSubmit: onFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contactsAfterFilter,\n      onDelete: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"qlFIVFuI5xcweAdw4vB3g14i5Jo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["useState","useEffect","Container","nanoid","Section","ContactList","ContactForm","Filter","App","contacts","setContacts","JSON","parse","localStorage","getItem","filter","setFilter","setItem","stringify","onFormSubmit","data","newContact","id","name","number","find","contact","alert","prevState","changeFilter","event","currentTarget","value","normalizedFilter","toLowerCase","contactsAfterFilter","includes","deleteContact"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AAAA;;AAAA,0BAAMW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAN,qDAAsD,EAAtD;AAAA,GAAD,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACO,SAAL,CAAeT,QAAf,CAAjC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMU,YAAY,GAAGC,IAAI,IAAI;AAC3B,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAEnB,MAAM,EADO;AAEjBoB,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAFM;AAGjBC,MAAAA,MAAM,EAAEJ,IAAI,CAACI;AAHI,KAAnB;;AAMA,QAAIf,QAAQ,CAACgB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACH,IAAR,KAAiBF,UAAU,CAACE,IAArD,CAAJ,EAAgE;AAC9DI,MAAAA,KAAK,CAAE,GAAEN,UAAU,CAACE,IAAK,yBAApB,CAAL;AACA;AACD;;AACDb,IAAAA,WAAW,CAACkB,SAAS,IAAK,CAAC,GAAGA,SAAJ,EAAeP,UAAf,CAAf,CAAX;AACD,GAZD;;AAcA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5Bd,IAAAA,SAAS,CAAEc,KAAK,CAACC,aAAN,CAAoBC,KAAtB,CAAT;AACD,GAFD;;AAIF,QAAMC,gBAAgB,GAAGlB,MAAM,CAACmB,WAAP,EAAzB;AACA,QAAMC,mBAAmB,GAAG1B,QAAQ,CAACM,MAAT,CAAgBW,OAAO,IAAIA,OAAO,CAACH,IAAR,CAAaW,WAAb,GAA2BE,QAA3B,CAAoCH,gBAApC,CAA3B,CAA5B;;AAEE,QAAMI,aAAa,GAAGf,EAAE,IAAI;AAC1BZ,IAAAA,WAAW,CAACkB,SAAS,IAAIA,SAAS,CAACb,MAAV,CAAiBW,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeA,EAA3C,CAAd,CAAX;AACH,GAFC;;AAIA,sBACI,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,UAAU,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEJ,MAAhB;AAAwB,MAAA,QAAQ,EAAEc;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEM,mBADZ;AAEE,MAAA,QAAQ,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYC,CA7CI;;GAAM7B,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Container } from './App.styled';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { Section } from './Section/Section';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { Filter } from './Filter/Filter';\r\n\r\n\r\nexport const App = () => {\r\n  const [contacts, setContacts] = useState(() => JSON.parse(localStorage.getItem('contacts')) ?? []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const onFormSubmit = data => {\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    if (contacts.find(contact => contact.name === newContact.name)) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prevState => ([...prevState, newContact]));\r\n  };\r\n\r\n  const changeFilter = event => {\r\n    setFilter( event.currentTarget.value);\r\n  }\r\n\r\nconst normalizedFilter = filter.toLowerCase();\r\nconst contactsAfterFilter = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n\r\n  const deleteContact = id => {\r\n    setContacts(prevState => prevState.filter(contact => contact.id !== id))\r\n}\r\n\r\n  return (\r\n      <Container>\r\n        <Section title=\"Phonebook\" />\r\n        <ContactForm formSubmit={onFormSubmit} />\r\n        <Section title=\"Contacts\" />\r\n        <Filter filter={filter} onChange={changeFilter} />\r\n        <ContactList\r\n          contacts={contactsAfterFilter}\r\n          onDelete={deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}