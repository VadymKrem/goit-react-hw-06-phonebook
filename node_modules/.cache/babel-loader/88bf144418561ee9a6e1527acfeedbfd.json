{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nconst contactsInitialState = [];\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: contactsInitialState,\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n\n      prepare(name) {\n        return {\n          payload: {\n            name,\n            id: nanoid() // completed: false,\n\n          }\n        };\n      }\n\n    },\n\n    deleteContact(state, action) {\n      const index = state.findIndex(contact => contact.id === action.payload);\n      state.splice(index, 1);\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\nexport const tasksReducer = contactsSlice.reducer;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/Redux/phonebookSlice.js"],"names":["createSlice","nanoid","contactsInitialState","contactsSlice","name","initialState","reducers","addContact","reducer","state","action","push","payload","prepare","id","deleteContact","index","findIndex","contact","splice","actions","tasksReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AAEA,MAAMC,oBAAoB,GAAG,EAA7B;AAEA,MAAMC,aAAa,GAAGH,WAAW,CAAC;AAChCI,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAEH,oBAFkB;AAGhCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,QAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACD,OAHS;;AAIVC,MAAAA,OAAO,CAACT,IAAD,EAAO;AACZ,eAAO;AACLQ,UAAAA,OAAO,EAAE;AACPR,YAAAA,IADO;AAEPU,YAAAA,EAAE,EAAEb,MAAM,EAFH,CAGP;;AAHO;AADJ,SAAP;AAOD;;AAZS,KADJ;;AAeRc,IAAAA,aAAa,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMM,KAAK,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeJ,MAAM,CAACE,OAAjD,CAAd;AACAH,MAAAA,KAAK,CAACU,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACD;;AAlBO;AAHsB,CAAD,CAAjC;AAyBA,OAAO,MAAM;AAAET,EAAAA,UAAF;AAAcQ,EAAAA;AAAd,IAAgCZ,aAAa,CAACiB,OAApD;AACP,OAAO,MAAMC,YAAY,GAAGlB,aAAa,CAACK,OAAnC","sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\r\n\r\nconst contactsInitialState = [];\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: contactsInitialState,\r\n  reducers: {\r\n    addContact: {\r\n      reducer(state, action) {\r\n        state.push(action.payload);\r\n      },\r\n      prepare(name) {\r\n        return {\r\n          payload: {\r\n            name,\r\n            id: nanoid(),\r\n            // completed: false,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    deleteContact(state, action) {\r\n      const index = state.findIndex(contact => contact.id === action.payload);\r\n      state.splice(index, 1);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\nexport const tasksReducer = contactsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}