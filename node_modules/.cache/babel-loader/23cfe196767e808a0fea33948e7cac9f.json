{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsList } from 'Redux/selectors';\nimport { addContact } from 'Redux/phonebookSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsList);\n\n  const dataSubmitForm = event => {\n    event.preventDefault();\n    const form = event.target;\n    const formName = event.target.elements.name.value;\n    const formNumber = event.target.elements.number.value;\n\n    if (contacts.some(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === formName;\n    })) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    dispatch(addContact(formName, formNumber));\n    form.reset();\n  };\n\n  const handleChangeName = evt => setName(evt.target.value);\n\n  const handleChangeNumber = evt => setNumber(evt.target.value);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: dataSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: contacts.name,\n        onChange: handleChangeName,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"tel\",\n        name: \"number\",\n        value: contacts.number,\n        onChange: handleChangeNumber,\n        pattern: \"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this); // state = {\n  //   name: '',\n  //   number: '',\n  // };\n  // handleChange = event => {\n  //   const { name } = event.currentTarget;\n  //   this.setState({ [name]: event.currentTarget.value });\n  // };\n  // dataSubmitForm = event => {\n  //   event.preventDefault();\n  //   this.props.formSubmit(this.state);\n  //   this.reset();\n  // };\n  // reset = () => {\n  //   this.setState({ name: '', number: '' });\n  // };\n  // render() {\n  //   return (\n  //     <Form onSubmit={this.dataSubmitForm}>\n  //       <Label>\n  //         {' '}\n  //         Name\n  //         <Input\n  //           type=\"text\"\n  //           name=\"name\"\n  //           value={this.state.name}\n  //           onChange={this.handleChange}\n  //           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  //           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  //           required\n  //         />\n  //       </Label>\n  //       <Label>\n  //         {' '}\n  //         Number\n  //         <Input\n  //           type=\"tel\"\n  //           name=\"number\"\n  //           value={this.state.number}\n  //           onChange={this.handleChange}\n  //           pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n  //           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  //           required\n  //         />\n  //       </Label>\n  //       <Button type=\"submit\">Add contact</Button>\n  //     </Form>\n  //   );\n  // }\n};\n\n_s(ContactForm, \"N87tOaNN+9L+ijtUAaGO2ahm1xA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","Form","Label","Input","Button","useDispatch","useSelector","getContactsList","addContact","ContactForm","name","setName","number","setNumber","dispatch","contacts","dataSubmitForm","event","preventDefault","form","target","formName","elements","value","formNumber","some","alert","reset","handleChangeName","evt","handleChangeNumber"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\nimport { Form, Label, Input, Button } from './ContactForm.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContactsList } from 'Redux/selectors';\r\nimport { addContact } from 'Redux/phonebookSlice';\r\n\r\nexport const ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContactsList);\r\n\r\n  const dataSubmitForm = event => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const formName = event.target.elements.name.value;\r\n    const formNumber = event.target.elements.number.value;\r\n\r\n    if (contacts.some(({ name }) => name === formName)) {\r\n      return alert(`${formName} is already in contacts`);\r\n    }\r\n\r\n    dispatch(addContact(formName, formNumber));\r\n    form.reset();\r\n  };\r\n  const handleChangeName = evt => setName(evt.target.value);\r\n  const handleChangeNumber = evt => setNumber(evt.target.value);\r\n  return (\r\n    <Form onSubmit={dataSubmitForm}>\r\n      <Label>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contacts.name}\r\n          onChange={handleChangeName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={contacts.number}\r\n          onChange={handleChangeNumber}\r\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n  // state = {\r\n  //   name: '',\r\n  //   number: '',\r\n  // };\r\n  // handleChange = event => {\r\n  //   const { name } = event.currentTarget;\r\n  //   this.setState({ [name]: event.currentTarget.value });\r\n  // };\r\n  // dataSubmitForm = event => {\r\n  //   event.preventDefault();\r\n  //   this.props.formSubmit(this.state);\r\n  //   this.reset();\r\n  // };\r\n  // reset = () => {\r\n  //   this.setState({ name: '', number: '' });\r\n  // };\r\n  // render() {\r\n  //   return (\r\n  //     <Form onSubmit={this.dataSubmitForm}>\r\n  //       <Label>\r\n  //         {' '}\r\n  //         Name\r\n  //         <Input\r\n  //           type=\"text\"\r\n  //           name=\"name\"\r\n  //           value={this.state.name}\r\n  //           onChange={this.handleChange}\r\n  //           pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  //           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n  //           required\r\n  //         />\r\n  //       </Label>\r\n  //       <Label>\r\n  //         {' '}\r\n  //         Number\r\n  //         <Input\r\n  //           type=\"tel\"\r\n  //           name=\"number\"\r\n  //           value={this.state.number}\r\n  //           onChange={this.handleChange}\r\n  //           pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n  //           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n  //           required\r\n  //         />\r\n  //       </Label>\r\n  //       <Button type=\"submit\">Add contact</Button>\r\n  //     </Form>\r\n  //   );\r\n  // }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}