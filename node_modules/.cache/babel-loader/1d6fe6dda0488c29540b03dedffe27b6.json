{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getContactsFilter, getContactsList } from 'Redux/selectors'; // import { createSelector } from '@reduxjs/toolkit';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = () => {\n  _s();\n\n  const contacts = useSelector(getContactsList);\n  console.log(contacts);\n  const filter = useSelector(getContactsFilter);\n  const filteredContacts = [...contacts.filter(contact => contact.name.toLowerCase().includes(filter))];\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: filteredContacts.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        id: id,\n        name: name,\n        number: number\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactList, \"1RfQgv040d7tk5SZf9pk5Spl3ow=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["ContactListItem","List","useSelector","getContactsFilter","getContactsList","ContactList","contacts","console","log","filter","filteredContacts","contact","name","toLowerCase","includes","map","id","number"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,mCAAhC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,iBAAnD,C,CACA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGJ,WAAW,CAACE,eAAD,CAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,MAAM,GAAGP,WAAW,CAACC,iBAAD,CAA1B;AACA,QAAMO,gBAAgB,GAAG,CACvB,GAAGJ,QAAQ,CAACG,MAAT,CAAgBE,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAApC,CAA3B,CADoB,CAAzB;AAGA,sBACE,QAAC,IAAD;AAAA,cACGC,gBAAgB,CAACK,GAAjB,CAAqB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMJ,QAAAA,IAAN;AAAYK,QAAAA;AAAZ,OAAD;AAAA,0BACpB,QAAC,eAAD;AAA0B,QAAA,EAAE,EAAED,EAA9B;AAAkC,QAAA,IAAI,EAAEJ,IAAxC;AAA8C,QAAA,MAAM,EAAEK;AAAtD,SAAsBD,EAAtB;AAAA;AAAA;AAAA;AAAA,cADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdM;;GAAMX,W;UACMH,W,EAEFA,W;;;KAHJG,W","sourcesContent":["import { ContactListItem } from './ContactListItem/ContactListItem';\r\nimport { List } from './ContactList.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getContactsFilter, getContactsList } from 'Redux/selectors';\r\n// import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const ContactList = () => {\r\n  const contacts = useSelector(getContactsList);\r\n  console.log(contacts);\r\n  const filter = useSelector(getContactsFilter);\r\n  const filteredContacts = [\r\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\r\n  ];\r\n  return (\r\n    <List>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} id={id} name={name} number={number} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}