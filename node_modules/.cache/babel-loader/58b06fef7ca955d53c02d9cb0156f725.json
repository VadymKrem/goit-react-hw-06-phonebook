{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\",\n    _s = $RefreshSig$();\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from 'Redux/selectors'; // import { createSelector } from '@reduxjs/toolkit';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ContactList() {\n  _s();\n\n  const contacts = useSelector(getVisibleContacts);\n  console.log(contacts); // const filter = useSelector(getContactsFilter);\n  // const filteredContacts = useMemo(() => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact => {\n  //     return contact.name.toLowerCase().includes(normalizedFilter, 0);\n  //   });\n  // }, [filter, contacts]);\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: contacts.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        id: id,\n        name: name,\n        number: number\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactList, \"FQPRIRb6lwui5Qc8L1TLBY7+JjM=\", false, function () {\n  return [useSelector];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.jsx"],"names":["ContactListItem","List","useSelector","getVisibleContacts","ContactList","contacts","console","log","map","id","name","number"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,mCAAhC;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,iBAAnC,C,CACA;;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,QAAMC,QAAQ,GAAGH,WAAW,CAACC,kBAAD,CAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAF4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,QAAC,IAAD;AAAA,cACGA,QAAQ,CAACG,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACZ,QAAC,eAAD;AAA0B,QAAA,EAAE,EAAEF,EAA9B;AAAkC,QAAA,IAAI,EAAEC,IAAxC;AAA8C,QAAA,MAAM,EAAEC;AAAtD,SAAsBF,EAAtB;AAAA;AAAA;AAAA;AAAA,cADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjBeL,W;UACGF,W;;;KADHE,W","sourcesContent":["import { ContactListItem } from './ContactListItem/ContactListItem';\r\nimport { List } from './ContactList.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from 'Redux/selectors';\r\n// import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  console.log(contacts);\r\n  // const filter = useSelector(getContactsFilter);\r\n  // const filteredContacts = useMemo(() => {\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n  //   return contacts.filter(contact => {\r\n  //     return contact.name.toLowerCase().includes(normalizedFilter, 0);\r\n  //   });\r\n  // }, [filter, contacts]);\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} id={id} name={name} number={number} />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}